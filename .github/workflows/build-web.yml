name: Deploy Website
on:
  workflow_dispatch:
  push:
    branches: [1.18.x]
    paths: [web/**]
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  generate:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - run: yarn install --frozen-lockfile
        working-directory: datagen

      - name: Cache generated data
        uses: actions/cache@v1
        with:
          path: datagen/generated
          key: ${{ runner.os }}-data-${{ hashFiles('datagen/sources.json') }}
          restore-keys: ${{ runner.os }}-data

      - name: Generate Data & Assets
        run: yarn generate --from sources.json --data generated/data --icons generated/public/blocks --lang generated/lang
        working-directory: datagen
        env:
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_DOWNLOAD_TOKEN }}
          VANILLA_DATA: ${{ secrets.VANILLA_DATA }}
          FORGE_DATA: ${{ secrets.FORGE_DATA }}

      - uses: actions/upload-artifact@v3
        with:
          name: data
          path: datagen/generated
          retention-days: 1

  deploy:
    needs: generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: data
          path: web

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
